{"version":3,"sources":["assets/img/avatar.svg","components/Profile/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileData.js","components/Profile/ProfileInfo/ProfileDataForm.js","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/common/FormsControls/ProfileFormControls.js","forms/AddNewPostForm.js","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","type","autoFocus","ProfileData","profile","isOwner","goToEditMode","className","onClick","fullName","toUpperCase","lookingForAJob","lookingForAJobDescription","aboutMe","Object","keys","contacts","map","key","Contact","contactTitle","contactValue","ProfileDataReduxForm","reduxForm","form","handleSubmit","error","onSubmit","CreateField","InputArea","ProfileInfo","savePhoto","saveProfile","Preloader","src","photos","large","userPhoto","alt","target","files","length","initialValues","formData","then","Post","message","likesCount","input","meta","hasError","touched","classNames","maxLength10","maxLengthCreator","AddNewPostForm","Field","component","placeholder","name","validate","required","MyPosts","React","memo","postsElements","profilePage","posts","post","id","AddPostFormRedux","values","addPost","newPostText","compose","connect","state","dispatch","addPostActionCreator","Profile","MyPostsContainer","ProfileContainer","Component","refreshProfile","userId","this","match","params","authorizedUserId","history","push","getProfile","getStatus","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","render","auth","isAuth","getUserProfile","withRouter"],"mappings":"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","file":"static/js/3.ddefce5c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.80d6e3b9.svg\";","import React, {useEffect, useState} from 'react';\r\nimport \"../Profile.scss\"\r\n\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode} >{props.status || \"No STATUS\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange}\r\n                           onBlur={deactivateEditMode}\r\n                           type=\"text\"\r\n                           autoFocus={true}\r\n                           value={status}\r\n                    />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from 'react';\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nexport const ProfileData = ({profile, isOwner, goToEditMode, status, updateStatus}) => {\r\n    return (\r\n        <div className=\"user__data\">\r\n            {isOwner && <div><button onClick={goToEditMode}>EDIT</button></div>}\r\n            <div>\r\n                <b className=\"user__name\">{profile.fullName.toUpperCase()}</b>\r\n            </div>\r\n            <div className=\"user__title\">\r\n                <b>Looking For A Job:</b>&nbsp;{profile.lookingForAJob ? \"YES\" : \"NO\"}\r\n            </div>\r\n            {\r\n                profile.lookingForAJob &&\r\n                <div className=\"user__title\">\r\n                    <b>My skills:</b>&nbsp;{profile.lookingForAJobDescription || 'No information available'}\r\n                </div>\r\n            }\r\n            <div className=\"user__title\">\r\n                <b>About Me:</b>&nbsp;{profile.aboutMe || 'No information available'}\r\n            </div>\r\n            <div className=\"user__title\">\r\n                <b>Contacts</b>&nbsp;{Object.keys(profile.contacts).map(key => {\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key] || 'No information available'}/>\r\n            })}\r\n            </div>\r\n            <div className=\"user__title\">\r\n                <div className=\"user__status\">\r\n                    <b>Status: &nbsp;</b>\r\n                    <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className=\"user__contacts\"><b>{contactTitle}: </b>{contactValue}</div>\r\n}\r\n","import React from 'react';\r\nimport {CreateField} from \"../../common/FormsControls/CreateField\";\r\nimport {InputArea} from \"../../common/FormsControls/LoginFormControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport \"../../Login/loginForm.scss\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"user__data\">\r\n            <div><button>SAVE</button></div>\r\n            { error &&\r\n            <div className=\"login_form_error\">{error}</div>\r\n            }\r\n            <div className=\"user__title_edit\">\r\n                <b>Full Name:</b>&nbsp;\r\n                    {CreateField(\" Set full name\", \"fullName\", [], InputArea)}\r\n            </div>\r\n            <div className=\"user__title_edit\">\r\n                <b>Looking For A Job:</b>&nbsp;\r\n                    {CreateField(null, \"lookingForAJob\", [], \"Input\", {type: 'checkbox'})}\r\n            </div>\r\n            <div className=\"user__title_edit\">\r\n                <b>My skills:</b>&nbsp;\r\n                    {CreateField(\"Your skills\", \"lookingForAJobDescription\", [], InputArea)}\r\n            </div>\r\n            <div className=\"user__title_edit\">\r\n                <b>About Me:</b>&nbsp;\r\n                    {CreateField(\"aboutMe\", \"aboutMe\", [], InputArea)}\r\n            </div>\r\n            <div className=\"user__title\">\r\n                <b>Contacts</b>&nbsp;{Object.keys(profile.contacts).map(key => {\r\n                return <div key={key} >\r\n                    <b className=\"user__title_edit_contacts\">{key}: {CreateField(key, \"contacts.\" + key, [], InputArea)}</b>\r\n                </div>\r\n            })}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ProfileDataReduxForm = reduxForm({form: 'editProfile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataReduxForm;\r\n","import React, {useState} from 'react';\r\nimport {Preloader} from \"../../common/preloader/Preloader\";\r\nimport userPhoto from \"../../../assets/img/avatar.svg\";\r\nimport {ProfileData} from \"./ProfileData\";\r\nimport ProfileDataReduxForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    if(!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if(e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false)\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"profile\">\r\n            <div className=\"profile__img\">\r\n                <img src={profile.photos.large || userPhoto} className=\"profile__avatar\" alt=\"profile-img\"/>\r\n                { isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n            </div>\r\n            {editMode\r\n                ? <ProfileDataReduxForm profile={profile}\r\n                                        initialValues={profile}\r\n                                        onSubmit={onSubmit}/>\r\n                : <ProfileData profile={profile}\r\n                               isOwner={isOwner}\r\n                               goToEditMode={()=>{setEditMode(true)}}\r\n                               status={status}\r\n                               updateStatus={updateStatus}\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className=\"posts\">\r\n            <div className=\"posts__items\">\r\n                <div className=\"posts__item\">\r\n                    <img src=\"https://www.pngkey.com/png/full/353-3534482_avatar-portfolio-02-avatar-sketch-cartoon-avatar.png\" className=\"posts__img\" alt=\"avatar\"/>\r\n                    <div className=\"posts__title\">{props.message}</div>\r\n                    <div className=\"posts__like\"><span className=\"posts__like_span\"><img src=\"https://www.flaticon.com/svg/static/icons/svg/1029/1029183.svg\" alt=\"like\"/> {props.likesCount}</span></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport classNames from 'classnames';\r\n\r\nexport const InputArea = ({input, meta, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <input {...input} {...props} className={classNames(\"form__input\", {\"form__input_error\" : hasError})}/>\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {Field} from \"redux-form\";\r\nimport '../components/Profile/Profile.scss';\r\nimport {maxLengthCreator, required} from \"../utils/validators/validators\";\r\nimport {InputArea} from \"../components/common/FormsControls/ProfileFormControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(30)\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className=\"form__wrapper\">\r\n            <div>\r\n                <Field\r\n                    component={InputArea}\r\n                    placeholder=\"Enter your news...\"\r\n                    name=\"newPostText\"\r\n                    validate={[required, maxLength10]}\r\n                />\r\n            </div>\r\n            <div >\r\n                <button className=\"form__button\">Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nexport default AddNewPostForm;","import React from 'react';\r\nimport Post from './Post/Post';\r\nimport {reduxForm} from \"redux-form\";\r\nimport AddNewPostForm from \"../../../forms/AddNewPostForm\";\r\n\r\nconst MyPosts = React.memo(props => {\r\n    const state = props.profilePage;\r\n    let postsElements = state.posts.map(post => <Post key={post.id} message={post.message} likesCount={post.likesCount}/>);\r\n    const addNewPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n    return (\r\n        <div className=\"form\">\r\n            <hr className=\"hr\"/>\r\n            <div className=\"form__title\">My Posts</div>\r\n            <AddPostFormRedux onSubmit={addNewPost}/>\r\n            <div>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nconst AddPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm)\r\nexport default MyPosts;\r\n","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps)(MyPosts));\r\n\r\n","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <ProfileInfo savePhoto={props.savePhoto}\r\n                         isOwner={props.isOwner}\r\n                         profile={props.profile}\r\n                         status={props.status}\r\n                         saveProfile={props.saveProfile}\r\n                         updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","import React, {Component} from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile, getProfile, getStatus, updateStatus, savePhoto, saveProfile} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport './Profile.scss'\r\n\r\nclass ProfileContainer extends Component{\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile\r\n                isOwner={!this.props.match.params.userId}\r\n                {...this.props}\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus}\r\n                savePhoto={this.props.savePhoto}/>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    //withAuthRedirect,\r\n    connect(mapStateToProps, {getUserProfile, getProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter)(ProfileContainer);\r\n"],"sourceRoot":""}